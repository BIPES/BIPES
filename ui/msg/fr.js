var MSG = {
  title: "BIPES",
  blocks: "Blocs",
  files: "Files",
  shared: "Shared",
  device: "Device",
  linkTooltip: "Sauvegarder et lier aux blocs.",
  runTooltip: "Lancer le programme défini par les blocs dans l’espace de travail.",
  badCode: "Erreur du programme :\n%1",
  timeout: "Nombre maximum d’itérations d’exécution dépassé.",
  trashTooltip: "Jeter tous les blocs.",
  catLogic: "Logique",
  catLoops: "Boucles",
  catMath: "Math",
  catText: "Texte",
  catLists: "Listes",
  catColour: "Couleur",
  catVariables: "Variables",
  catFunctions: "Fonctions",
  listVariable: "liste",
  textVariable: "texte",
  httpRequestError: "Il y a eu un problème avec la demande.",
  linkAlert: "Partagez vos blocs grâce à ce lien:\n\n%1",
  hashError: "Désolé, '%1' ne correspond à aucun programme sauvegardé.",
  xmlError: "Impossible de charger le fichier de sauvegarde.  Peut être a t-il été créé avec une autre version de Blockly?",
  badXml: "Erreur d’analyse du XML :\n%1\n\nSélectionner 'OK' pour abandonner vos modifications ou 'Annuler' pour continuer à modifier le XML.",
  saveTooltip: "Sauvegarde les blocs dans un fichier.",
  loadTooltip: "Charger des blocs depuis un fichier.",
  notificationTooltip: "Panneau de notification.",
  ErrorGET: "Impossible de charger le fichier demandé.",
  invalidDevice: "Appareil invalide.",
  languageTooltip: "Changer de langue.",
  noToolbox: "Cet appareil n'a aucune toolbox de configurée.",
  networkTooltip: "Connexion depuis le réseau (WebREPL, http).",
  serialTooltip: "Connexion en série/USB ou en Bluetooth (Web Serial API, https).",
  toolbarTooltip: "Afficher la barre d'outils.",
  wrongDevicePin: "Vérifiez les broches, la cible de l'appareil à changée.",
  notDefined: "non défini",
  editAsFileValue: "Editer comme un fichier.",
  editAsFileTooltip: "Editer le code en python et le sauvegarder dans le système de fichier de l'appareil.",
  forumTooltip: "Aide du forum.",
  accountTooltip: "Vos projets et paramètres.",
  blocksLoadedFromFile: "Blocs chargés depusi le fichier '%1'.",
  deviceUnavailable: "Appareil '%1' non disponible.",
  notConnected: "Aucune connection à qui envoyer des données.",
  serialFroozen: "Le connexion en série ne répond pas.",
  notAvailableFlag: "$1 n'est pas disponible sur votre navigateur.\r\nVérifiez que $1 flag est activé.",

//Blocks
  block_delay: "delais",
  seconds: "secondes",
  milliseconds: "millisecondes",
  microseconds: "microsecondes",
  to: "vers",
  setpin: "Configurer les broches de sortie",
  pin: "broche",
  read_digital_pin: "lire une entrée digitale",
  read_analog_pin: "lire une entrée analogue",
  show_iot: "afficher sur l'onglet IoT",
  data: "valeur",
  set_rtc: "Modifier la date et l'heure",
  get_rtc: "Récuprer la date et l'heure",
  year: "année",
  month: "mois",
  day: "jour",
  hour: "heure",
  minute: "minute",
  second: "seconde",
  wifi_scan: "scanner les réseaux wifi",
  wifi_connect: "connexion au réseau wifi",
  wifi_name: "nom du réseau",
  wifi_key: "clé/mot de passe",
  easymqtt_start: "EasyMQTT Démarrer",
  easymqtt_publish: "EasyMQTT publier les données",
  topic: "sujet",
  session_id: "Identifiant de session",
  file_open: "ouvrir fichier",
  file_name: "nom du fichier",
  file_mode: "mode",
  file_binary: "ouvrir en mode binaire",
  file_close: "fermer le fichier",
  file_write_line: "écrire une ligne au fichier",
  file_line: "ligne",
  try1: "Essayer",
  exp1: "exception",
  ntp_sync: "synchroniser la date et l'heure avec NTP",
  timezone: "fuseau horaire",
  project_info: "Infos du projet",
  project_info_author: "Auteur",
  project_info_desc: "Description",
  easymqtt_subscribe: "EasyMQTT s'abonner au sujet",
  when: "quand",
  data_received: "est reçu",
  easymqtt_receive: "EasyMQTT à reçu des données",
  relay: "relais",
  on: "allumer",
  off: "éteindre",
  relay_on: "relais sur broche",
  yes: "oui",
  no: "non",
  wait_for_data: "attendre des données",
  dht_start: "Démarrer le capteur DHT",
  dht_measure: "mettre à jour DHT11/22 lecteur de capteur",
  dht_temp: "récuperer DHT11/22 température",
  dht_humi: "récuprer DHT11/22 humidité",
  type: "type",

//Network
  net_http_get: "HTTP GET requếte",
  net_http_get_status: "HTTP Statut code",
  net_http_get_content: "HTTP Reponse contenu",

//Splash screen
  splash_welcome: "Bienvenue sur BIPES!",
  splash_footer: "Ne plus afficher cette écran.",
  splash_close: "Fermer",
  splash_message: "<p><b>BIPES: Block based Integrated Platform for Embedded Systems (Plateforme pour le developpement en bloc pour les systèmes embarqués.</B> allows text and block based programming for several types of embedded systems and Internet of Things modules using MicroPython, CircuitPython, Python or Snek. You can connect, program, debug and monitor several types of boards using network, USB or Bluetooth. Please check a list of <a href=https://bipes.net.br/wp/boards/>compatible boards here</a>. Compatible boards include STM32, ESP32, ESP8266, Raspberry Pi Pico and even Arduino.  <p><b>BIPES</b> is fully <a href=https://bipes.net.br/wp/development/>open source</a> and based on HTML and JavaScript, so no software install or configuration is needed and you can use it offline! We hope BIPES is useful for you and that you can enjoy using BIPES. If you need help, we now have a <a href=https://github.com/BIPES/BIPES/discussions>discussion forum</a>, where we also post <a href=https://github.com/BIPES/BIPES/discussions/categories/announcements>new features and announcements about BIPES</a>. Feel free to use it! Also, we invite you to use the forum to leave feedbacks and suggestions for BIPES!</p><p>Now you can easily load MicroPython on your ESP32 or ESP8226 to use with BIPES: <a href=https://bipes.net.br/flash/esp-web-tools/>https://bipes.net.br/flash/esp-web-tools/</a></p> <p>Thank you from the BIPES Team!</p>"

  

};

//Toolbox categories
Blockly.Msg['CAT_TIMING'] = "Minutage";
Blockly.Msg['CAT_MACHINE'] = "Machine";
Blockly.Msg['CAT_DISPLAYS'] = "Affichages";
Blockly.Msg['CAT_SENSORS'] = "Capteurs";
Blockly.Msg['CAT_OUTPUTS'] = "Sorties / Actionneurs";
Blockly.Msg['CAT_COMM'] = "Communication";
Blockly.Msg['CAT_FILES'] = "Fichiers";
Blockly.Msg['CAT_NET'] = "Réseaux et Internet";
Blockly.Msg['CAT_CONTROL'] = "Contrôle";

