var MSG = {
  title: "BIPES Beta",
  blocks: "Bloques",
  linkTooltip: "Guarda conexión a los bloques.",
  runTooltip: "Ejecute el programa definido por los bloques en el área de trabajo.",
  badCode: "Error del programa:\n%1",
  timeout: "Se excedio el máximo de iteraciones ejecutadas permitidas.",
  trashTooltip: "Descartar todos los bloques.",
  catLogic: "Lógica",
  catLoops: "Secuencias",
  catMath: "Matemáticas",
  catText: "Texto",
  catLists: "Listas",
  catColour: "Color",
  catVariables: "Variables",
  catFunctions: "Funciones",
  listVariable: "lista",
  textVariable: "texto",
  httpRequestError: "Hubo un problema con la petición.",
  linkAlert: "Comparte tus bloques con este enlace:\n\n%1",
  hashError: "«%1» no corresponde con ningún programa guardado.",
  xmlError: "No se pudo cargar el archivo guardado.  ¿Quizá fue creado con otra versión de Blockly?",
  badXml: "Error de análisis XML:\n%1\n\nSelecciona OK para abandonar tus cambios o Cancelar para seguir editando el XML.",
  saveTooltip: "Guarde los bloques en el archivo.",
  loadTooltip: "Cargar bloques del archivo.",
  notificationTooltip: "Panel de notificaciones.",
  ErrorGET: "No se puede cargar el archivo solicitado. ",
  invalidDevice: "Dispositivo inválido.",
  languageTooltip: "Cambiar idioma.",
  noToolbox: "El dispositivo no tiene una toolbox.",
  networkTooltip: "Conectarse a través de la red  (WebREPL, http).",
  serialTooltip: "Conectarse a través de serial/USB o Bluetooth (Web Serial API, https).",
  toolbarTooltip: "Barra de herramientas",
  wrongDevicePin: "Compruebe los pines, el dispositivo ha cambiado",
  notDefined: "no definido",
  editAsFileValue: "Editar como archivo",
  editAsFileTooltip: "Edite el código python y guárdelo en el dispositivo.",
  forumTooltip: "Foro de ayuda",
  blocksLoadedFromFile: "Bloques cargados desde el archivo '%1'.",
  deviceUnavailable: "Dispositivo '%1' no disponible.",
  notAvailableFlag: "$1 no está disponible en su navegador.\r\nAsegúrese de que la 'flag' $1 esté habilitada.,

//Blocks
  block_delay: "delay",
  seconds: "seconds",
  milliseconds: "milliseconds",
  microseconds: "microseconds",
  to: "to",
  setpin: "set output pin",
  pin: "pin",
  read_digital_pin: "read digital input",
  read_analog_pin: "read analog input",
  show_iot: "show on IoT tab",
  data: "value",
  set_rtc: "set date and time",
  get_rtc: "get date and time",
  year: "year",
  month: "month",
  day: "day",
  hour: "hour",
  minute: "minute",
  second: "second",
  wifi_scan: "scan wifi networks",
  wifi_connect: "connect to wifi network",
  wifi_name: "network name",
  wifi_key: "key/password",
  easymqtt_start: "EasyMQTT Start",
  easymqtt_publish: "EasyMQTT Publish Data",
  topic: "topic",
  session_id: "session ID",
  file_open: "open File",
  file_name: "file name",
  file_mode: "mode",
  file_binary: "open in binary mode",
  file_close: "close file",
  file_write_line: "write line o file",
  file_line: "line",
  try1: "try",
  exp1: "except",
  ntp_sync: "sync date and time with NTP",
  timezone: "timezone",
  project_info: "Project Info",
  project_info_author: "Author",
  project_info_desc: "Description",
  easymqtt_subscribe: "EasyMQTT subscribe to topic",
  when: "when",
  data_received: "is received",
  easymqtt_receive: "EasyMQTT receive data",
  relay: "relay",
  on: "on",
  off: "off",
  relay_on: "relay on pin",
  yes: "yes",
  no: "no",
  wait_for_data: "wait for data",
  dht_start: "Start DHT Sensor",
  dht_measure: "update DHT11/22 sensor reading",
  dht_temp: "get DHT11/22 temperature",
  dht_humi: "get DHT11/22 humidity"
  

};

//Toolbox categories
Blockly.Msg['CAT_TIMING'] = "Timing";
Blockly.Msg['CAT_MACHINE'] = "Machine";
Blockly.Msg['CAT_DISPLAYS'] = "Displays";
Blockly.Msg['CAT_SENSORS'] = "Sensors";
Blockly.Msg['CAT_OUTPUTS'] = "Outputs / Actuators";
Blockly.Msg['CAT_COMM'] = "Communication";
Blockly.Msg['CAT_FILES'] = "Files";
Blockly.Msg['CAT_NET'] = "Network and Internet";
Blockly.Msg['CAT_CONTROL'] = "Controle";
